<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="4" passed="3">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="53937" started-at="2021-08-10T11:54:57 PDT" finished-at="2021-08-10T11:55:51 PDT">
    <groups>
    </groups>
    <test name="Test1" duration-ms="43" started-at="2021-08-10T11:54:57 PDT" finished-at="2021-08-10T11:54:57 PDT">
    </test> <!-- Test1 -->
    <test name="Test3" duration-ms="47250" started-at="2021-08-10T11:54:57 PDT" finished-at="2021-08-10T11:55:44 PDT">
      <class name="Academy.ValidateTitle">
        <test-method status="PASS" signature="initialize()[pri:0, instance:Academy.ValidateTitle@23f5b5dc]" name="initialize" is-config="true" duration-ms="42520" started-at="2021-08-10T11:54:57 PDT" finished-at="2021-08-10T11:55:39 PDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="FAIL" signature="basePageNavigation()[pri:0, instance:Academy.ValidateTitle@23f5b5dc]" name="basePageNavigation" duration-ms="1150" started-at="2021-08-10T11:55:39 PDT" finished-at="2021-08-10T11:55:41 PDT">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [false] but found [true]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertFalse(Assert.java:67)
at org.testng.Assert.assertFalse(Assert.java:77)
at Academy.ValidateTitle.basePageNavigation(ValidateTitle.java:47)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1259)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- basePageNavigation -->
        <test-method status="PASS" signature="validation()[pri:0, instance:Academy.ValidateTitle@23f5b5dc]" name="validation" duration-ms="843" started-at="2021-08-10T11:55:42 PDT" finished-at="2021-08-10T11:55:43 PDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validation -->
        <test-method status="PASS" signature="forClosing()[pri:0, instance:Academy.ValidateTitle@23f5b5dc]" name="forClosing" is-config="true" duration-ms="931" started-at="2021-08-10T11:55:43 PDT" finished-at="2021-08-10T11:55:44 PDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- forClosing -->
      </class> <!-- Academy.ValidateTitle -->
    </test> <!-- Test3 -->
    <test name="Test2" duration-ms="53936" started-at="2021-08-10T11:54:57 PDT" finished-at="2021-08-10T11:55:51 PDT">
      <class name="Academy.HomePage">
        <test-method status="PASS" signature="intialize()[pri:0, instance:Academy.HomePage@69c81773]" name="intialize" is-config="true" duration-ms="26658" started-at="2021-08-10T11:54:57 PDT" finished-at="2021-08-10T11:55:24 PDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- intialize -->
        <test-method status="PASS" signature="basePageNavigation(java.lang.String,java.lang.String)[pri:0, instance:Academy.HomePage@69c81773]" name="basePageNavigation" duration-ms="21479" started-at="2021-08-10T11:55:24 PDT" data-provider="getData" finished-at="2021-08-10T11:55:45 PDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[allowed@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- basePageNavigation -->
        <test-method status="PASS" signature="basePageNavigation(java.lang.String,java.lang.String)[pri:0, instance:Academy.HomePage@69c81773]" name="basePageNavigation" duration-ms="5297" started-at="2021-08-10T11:55:45 PDT" data-provider="getData" finished-at="2021-08-10T11:55:51 PDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[restricted@gmial.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4567]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- basePageNavigation -->
        <test-method status="PASS" signature="forclosing()[pri:0, instance:Academy.HomePage@69c81773]" name="forclosing" is-config="true" duration-ms="222" started-at="2021-08-10T11:55:51 PDT" finished-at="2021-08-10T11:55:51 PDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- forclosing -->
      </class> <!-- Academy.HomePage -->
    </test> <!-- Test2 -->
  </suite> <!-- Suite -->
</testng-results>
